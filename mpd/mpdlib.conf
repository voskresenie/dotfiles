# $XDG_CONFIG_HOME/mpd/libraries.conf
#
# This file containers configurations for multiple mpd libraries to be used in
# conjunction with mpdlib. The music_directory, playlist_directory, db_file, and
# state_file fields are optional and will default to mpd's default values for
# these fields if unset. See man(5) mpd.conf for details.
#
# Each library config takes the following required fields:
#
#   library {
#       name				"libname"
#       default				"true"
#       music_directory		"~/.config/mpd/library/libname"
#       playlist_directory	"~/.config/mpd/library/playlists/libname"
#       db_file				"~/.config/mpd/database_libname"
#       state_file			"~/.config/mpd/state_libname"
#   }
#
# In addition to the required fields, mpdlib also takes as arguments all fields
# defined in the mpd.conf spec. See man(5) mpd.conf for details.
#
# However, most of these will not usually be defined at a per-library level. The
# following are the fields that are recommended to be set per library:
#
#   library {
#       name				"libname"
#       default				"true"
#       music_directory		"~/.config/mpd/library/libname"
#       playlist_directory	"~/.config/mpd/library/playlists/libname"
#       db_file				"~/.config/mpd/database_libname"
#       state_file			"~/.config/mpd/state_libname"
#   }
#
# music_directory <directory>
#        This specifies the directory where music is located. If you do not configure this, you can only play streams.

# playlist_directory <directory>
#        This specifies the directory where saved playlists are stored. If you do  not  configure  this,  you  cannot  save
#        playlists.

# state_file <file>
#        This  specifies  if a state file is used and where it is located. The state of mpd will be saved to this file when
#        mpd is terminated by a TERM signal or by the kill command. When mpd is restarted, it will read the state file  and
#        restore the state of mpd (including the playlist).
#
# The `default` option tells mpdlib which library to
# switch to when the script is invoked with no library argument. If no default
# config is set, the script will choose the first config in this file. If there
# are no configs in this file, the default values will depend on whether the
# script is run at the user or system level.
#
# You may user ~ and environment variables in paths.
#

mpd_conf				"${XDG_CONFIG_HOME:-~/.config}/mpd/mpd.conf"
base_mpd_conf			"${XDG_CONFIG_HOME:-~/.config}/mpd/mpd.conf.base"

library {
	name				"default"
	default				"true"
	music_directory		"${XDG_CONFIG_HOME:-~/.config}/mpd/library"
	playlist_directory	"${XDG_CONFIG_HOME:-~/.config}/mpd/playlists"
	db_file				"${XDG_CONFIG_HOME:-~/.config}/mpd/database"
	state_file			"${XDG_CONFIG_HOME:-~/.config}/mpd/state"
}

library {
	name				"contemporary"
	music_directory		"${XDG_CONFIG_HOME:-~/.config}/mpd/library/contemporary"
	playlist_directory	"${XDG_CONFIG_HOME:-~/.config}/mpd/library/playlists/contemporary"
}

library {
	name				"classical"
	music_directory		"${XDG_CONFIG_HOME:-~/.config}/mpd/library/classical"
	playlist_directory	"${XDG_CONFIG_HOME:-~/.config}/mpd/library/playlists/classical"
	db_file				"${XDG_CONFIG_HOME:-~/.config}/mpd/database_classical"
	state_file			"${XDG_CONFIG_HOME:-~/.config}/mpd/state_classical"
}
