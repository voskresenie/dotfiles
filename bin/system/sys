#!/usr/bin/env zsh
#
# /usr/local/bin/sys
#
# This script initializes and maintains a system in a standardized format
#
# Usage:
# * init - initial setup
# * TODO - install packages
# * TODO - update packages
# * files - copy or symlink managed files
# * TODO - set up hosts file
# * TODO - set up NFS connection in fstab file
#
# TODO: this is apparently bad for some reason, fix it
# http://mywiki.wooledge.org/BashFAQ/028
readonly hostname=$(cat /etc/hostname)
readonly pkgname=voskarch
readonly script_name="$(basename $0)"
readonly script_dir="$(dirname "$(realpath "$0")")"
repo_dir="$(realpath "$script_dir/../..")"
export PATH=$script_dir:$PATH
source "$repo_dir"/cfg/system/zsh/zshenv
source "$repo_dir"/cfg/system/zsh/zprofile

source "$repo_dir"/cfg/user/colors/env
PREFIX="$BLUE::$RESET"

# sys scripts
source "$repo_dir"/bin/system/sys_abs
source "$repo_dir"/bin/system/sys_backup
source "$repo_dir"/bin/system/sys_files
source "$repo_dir"/bin/system/sys_init
source "$repo_dir"/bin/system/sys_install
source "$repo_dir"/bin/system/sys_orphan_deps
source "$repo_dir"/bin/system/sys_prereq
source "$repo_dir"/bin/system/sys_restore
source "$repo_dir"/bin/system/sys_system
source "$repo_dir"/bin/system/sys_update
source "$repo_dir"/bin/system/sys_utils

# these should already be set by one of the profile files, but might be worth
# keeping around anyway just in case
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"
XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"

config_dir="$XDG_CONFIG_HOME/$pkgname"
state_dir="$XDG_STATE_HOME/$pkgname"
data_dir="$XDG_DATA_HOME/$pkgname"

# directory for backing up files before overwriting
file_backup_dir="$state_dir/files/backup"
# file for keeping track of files managed by script
file_state="$state_dir/files/managed"

# list of files `src:dst` (potentially) managed by script
# TODO: add support for destination being a directory rather than filename
# TODO: add support for * operator
system_bins=(
             "bin/system/ensure:/usr/local/bin/ensure"
             "bin/system/listop:/usr/local/bin/listop"
             "bin/system/sys:/usr/local/bin/sys"
           )

system_cfgs=(
             "cfg/system/pacman.conf:/etc/pacman.conf"
             "cfg/system/profile.d/user.sh:/etc/profile.d/user.sh"
             "cfg/system/reflector.conf:/etc/xdg/reflector/reflector.conf"
             "cfg/system/sysctl.d/disable_ipv6.conf:/etc/sysctl.d/disable_ipv6.conf"
             "cfg/system/theme/kvantum.kvconfig:/etc/xdg/Kvantum/kvantum.kvconfig"
             "cfg/system/zsh/zlogout:/etc/zsh/zlogout"
             "cfg/system/zsh/zprofile:/etc/zsh/zprofile"
             "cfg/system/zsh/zshenv:/etc/zsh/zshenv"
             "cfg/system/zsh/zshrc:/etc/zsh/zshrc"
           )

user_bins=(
           "bin/user/xstat:$HOME/bin/xstat"
         )

user_cfgs=(
           "cfg/user/colors/env:$ZDOTDIR/colorsenv"
           "cfg/user/dunstrc:$XDG_CONFIG_HOME/dunst/dunstrc"
           "cfg/user/fehbg:$XDG_CONFIG_HOME/fehbg"
           "cfg/user/git/config:$XDG_CONFIG_HOME/git/config"
           "cfg/user/htoprc:$XDG_CONFIG_HOME/htop/htoprc"
           "cfg/user/inputrc:$HOME/.inputrc"                                       # TODO: make xdg-compliant
           "cfg/user/mpd.conf:$XDG_CONFIG_HOME/mpd/mpd.conf"
           "cfg/user/mpv.conf:$XDG_CONFIG_HOME/mpv/mpv.conf"
           "cfg/user/ncmpcpp/bindings:$XDG_CONFIG_HOME/ncmpcpp/bindings"
           "cfg/user/ncmpcpp/config:$XDG_CONFIG_HOME/ncmpcpp/config"
           "cfg/user/ncmpcpp/patterns.list:$XDG_CONFIG_HOME/ncmpcpp/patterns.list"
           "cfg/user/profile:$HOME/.profile"                                       # TODO: make xdg-compliant
           "cfg/user/redshift.conf:$XDG_CONFIG_HOME/redshift.conf"
           "cfg/user/tmux.conf:$XDG_CONFIG_HOME/tmux/tmux.conf"
           "cfg/user/vim/vimrc:$XDG_CONFIG_HOME/vim/vimrc"
           "cfg/user/vim/colors.vim:$XDG_CONFIG_HOME/vim/colors/voskarch.vim"
           "cfg/user/vim/colors.airline.vim:$XDG_CONFIG_HOME/vim/autoload/airline/themes/voskarch.vim"
           "cfg/user/nvim/init.vim:$XDG_CONFIG_HOME/nvim/init.vim"
           "cfg/user/X11/colorsdark:$XDG_CONFIG_HOME/X11/colorsdark"
           "cfg/user/X11/urxvt:$XDG_CONFIG_HOME/X11/urxvt"
           "cfg/user/X11/xbindkeysrc:$HOME/.xbindkeysrc"                           # TODO: make xdg-compliant
           "cfg/user/X11/xinitrc:$HOME/.xinitrc"                                   # TODO: make xdg-compliant
           "cfg/user/X11/xresources:$XDG_CONFIG_HOME/X11/xresources"
           "cfg/user/zsh/zlogin:$ZDOTDIR/.zlogin"                                  # TODO: see if it's possible to remove preceding dot
           "cfg/user/zsh/zlogout:$ZDOTDIR/.zlogout"                                # TODO: see if it's possible to remove preceding dot
           "cfg/user/zsh/zprofile:$ZDOTDIR/.zprofile"                              # TODO: see if it's possible to remove preceding dot
           "cfg/user/zsh/zshenv:$ZDOTDIR/.zshenv"                                  # TODO: see if it's possible to remove preceding dot
           "cfg/user/zsh/zshrc:$ZDOTDIR/.zshrc"                                    # TODO: see if it's possible to remove preceding dot

           #cfg/user/"fonts.conf:$XDG_CONFIG_HOME/fontconfig/fonts.conf"
           #dwb/
           #dwb/searchengines
           #dwb/settings
           #dwm/
           #dwm/dwm-diff.sh
           #dwm/dwm-grid-6.1.diff
           #dwm/dwm-svarog-6.1.diff
           #dwm/PKGBUILD
           #firefox/
           #firefox/chrome/
           #firefox/chrome/userChrome.css
           #firefox/chrome/userContent.css
         )
# intel gpu-specific cfgs
intel_gpu_cfgs=(
                "cfg/system/xorg.conf.d/20-intel-gpu.conf:/etc/X11/xorg.conf.d/20-intel-gpu.conf"
              )

system=( "${system_bins[@]}" "${system_cfgs[@]}" )
user=( "${user_bins[@]}" "${user_cfgs[@]}" )
bins=( "${system_bins[@]}" "${user_bins[@]}" )
cfgs=( "${system_cfgs[@]}" "${user_cfgs[@]}" )

hosts () {
  echo "$script_name $0 not implemented" >&2
}

fstab () {
  echo "$script_name $0 not implemented" >&2
}

fstab() {
  echo "fstab not implemented" >&2
}

readonly cmd=${1:?"The command must be specified."}
prereq
case $cmd in
  init) init "${@:2}" ;;
  install) install "${@:2}" ;;
  abs) abs "${@:2}" ;;
  backup) backup "${@:2}" ;;
  update) update "${@:2}" ;;
  restore) restore "${@:2}" ;;
  files) files "${@:2}" ;;
  hosts) hosts "${@:2}" ;;
  fstab) fstab "${@:2}" ;;
  hretha) __system hretha "${@:2}" ;;
  svarog) __system svarog "${@:2}" ;;
  valhalla) __system valhalla "${@:2}" ;;
  *) echo "Invalid command $cmd" >&2
    exit 1
esac
